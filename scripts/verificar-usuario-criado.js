// Script para verificar se o usu√°rio foi criado corretamente no Supabase

// Suas vari√°veis do Supabase
const supabaseUrl = 'https://bmakppbboypkggrtxlkn.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJtYWtwcGJib3lwa2dncnR4bGtuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTAyNjcwNjcsImV4cCI6MjA2NTg0MzA2N30.o9yvioEiGrLuGk239lG_lXIWGU6s_vzKPK0lPfV08vU'

console.log('üîç VERIFICANDO USU√ÅRIO CRIADO')
console.log('=====================================')

// Fun√ß√£o para fazer requisi√ß√µes ao Supabase
async function supabaseRequest(endpoint, options = {}) {
  const url = `${supabaseUrl}/rest/v1/${endpoint}`
  const headers = {
    'apikey': supabaseKey,
    'Authorization': `Bearer ${supabaseKey}`,
    'Content-Type': 'application/json',
    'Prefer': 'return=representation',
    ...options.headers
  }

  try {
    const response = await fetch(url, {
      ...options,
      headers
    })

    const data = await response.json()
    
    if (!response.ok) {
      return { data: null, error: data }
    }

    return { data, error: null }
  } catch (error) {
    return { data: null, error: { message: error.message } }
  }
}

async function verificarUsuarioCriado() {
  console.log('\nüìã DADOS DO USU√ÅRIO CRIADO NA APLICA√á√ÉO:')
  console.log('ID: user_1754593410789_3keoqxdt5')
  console.log('Nome: Thuany')
  console.log('Email: tu@email.com')
  console.log('Tipo: aluno')
  console.log('Telefone: 489536215')
  console.log('Data: 2025-08-07T19:03:30.789Z')

  // 1. Verificar se o usu√°rio existe no banco
  console.log('\n1Ô∏è‚É£ VERIFICANDO NO BANCO DE DADOS:')
  
  try {
    // Buscar por ID espec√≠fico
    const { data: usuarioPorId, error: errorId } = await supabaseRequest('usuarios?id=eq.user_1754593410789_3keoqxdt5')
    
    if (errorId) {
      console.log('‚ùå Erro ao buscar por ID:', errorId.message)
    } else if (usuarioPorId && usuarioPorId.length > 0) {
      console.log('‚úÖ ENCONTRADO POR ID!')
      const usuario = usuarioPorId[0]
      console.log('   üìã Dados no banco:')
      console.log('   - ID:', usuario.id)
      console.log('   - Nome:', usuario.nome)
      console.log('   - Email:', usuario.email)
      console.log('   - Tipo:', usuario.tipo)
      console.log('   - Telefone:', usuario.telefone)
      console.log('   - Criado em:', usuario.created_at)
      console.log('   - Status:', usuario.status || 'N/A')
    } else {
      console.log('‚ùå N√ÉO ENCONTRADO POR ID')
    }

    // Buscar por email como alternativa
    const { data: usuarioPorEmail, error: errorEmail } = await supabaseRequest('usuarios?email=eq.tu@email.com')
    
    if (errorEmail) {
      console.log('‚ùå Erro ao buscar por email:', errorEmail.message)
    } else if (usuarioPorEmail && usuarioPorEmail.length > 0) {
      console.log('‚úÖ ENCONTRADO POR EMAIL!')
      const usuario = usuarioPorEmail[0]
      console.log('   üìã Dados no banco:')
      console.log('   - ID:', usuario.id)
      console.log('   - Nome:', usuario.nome)
      console.log('   - Email:', usuario.email)
      console.log('   - Tipo:', usuario.tipo)
      console.log('   - Telefone:', usuario.telefone)
      console.log('   - Criado em:', usuario.created_at)
    } else {
      console.log('‚ùå N√ÉO ENCONTRADO POR EMAIL')
    }

    // Buscar por nome
    const { data: usuarioPorNome, error: errorNome } = await supabaseRequest('usuarios?nome=eq.Thuany')
    
    if (errorNome) {
      console.log('‚ùå Erro ao buscar por nome:', errorNome.message)
    } else if (usuarioPorNome && usuarioPorNome.length > 0) {
      console.log('‚úÖ ENCONTRADO POR NOME!')
      const usuario = usuarioPorNome[0]
      console.log('   üìã Dados no banco:')
      console.log('   - ID:', usuario.id)
      console.log('   - Nome:', usuario.nome)
      console.log('   - Email:', usuario.email)
      console.log('   - Tipo:', usuario.tipo)
      console.log('   - Telefone:', usuario.telefone)
      console.log('   - Criado em:', usuario.created_at)
    } else {
      console.log('‚ùå N√ÉO ENCONTRADO POR NOME')
    }

  } catch (error) {
    console.log('‚ùå Erro cr√≠tico na busca:', error.message)
  }

  // 2. Listar todos os usu√°rios para verificar
  console.log('\n2Ô∏è‚É£ LISTANDO TODOS OS USU√ÅRIOS NO BANCO:')
  
  try {
    const { data: todosUsuarios, error: errorTodos } = await supabaseRequest('usuarios?select=*&order=created_at.desc')
    
    if (errorTodos) {
      console.log('‚ùå Erro ao listar usu√°rios:', errorTodos.message)
    } else if (todosUsuarios && todosUsuarios.length > 0) {
      console.log(`‚úÖ Total de usu√°rios no banco: ${todosUsuarios.length}`)
      console.log('\nüìã LISTA COMPLETA:')
      
      todosUsuarios.forEach((usuario, index) => {
        console.log(`\n${index + 1}. ${usuario.nome}`)
        console.log(`   ID: ${usuario.id}`)
        console.log(`   Email: ${usuario.email}`)
        console.log(`   Tipo: ${usuario.tipo}`)
        console.log(`   Telefone: ${usuario.telefone || 'N/A'}`)
        console.log(`   Criado: ${usuario.created_at}`)
        
        // Verificar se √© o usu√°rio que acabamos de criar
        if (usuario.email === 'tu@email.com' || usuario.nome === 'Thuany') {
          console.log('   üéØ ESTE √â O USU√ÅRIO QUE ACABAMOS DE CRIAR!')
        }
      })
    } else {
      console.log('‚ùå Nenhum usu√°rio encontrado no banco')
    }

  } catch (error) {
    console.log('‚ùå Erro ao listar usu√°rios:', error.message)
  }

  // 3. Verificar estrutura da tabela
  console.log('\n3Ô∏è‚É£ VERIFICANDO ESTRUTURA DA TABELA:')
  
  try {
    const response = await fetch(`${supabaseUrl}/rest/v1/usuarios?limit=0`, {
      method: 'HEAD',
      headers: {
        'apikey': supabaseKey,
        'Authorization': `Bearer ${supabaseKey}`
      }
    })
    
    if (response.ok) {
      console.log('‚úÖ Tabela usuarios existe e est√° acess√≠vel')
    } else {
      console.log('‚ùå Problema com a tabela usuarios:', response.status)
    }
  } catch (error) {
    console.log('‚ùå Erro ao verificar tabela:', error.message)
  }

  // 4. Resultado final
  console.log('\nüéØ RESULTADO DA VERIFICA√á√ÉO:')
  console.log('=====================================')
  
  // Fazer uma √∫ltima verifica√ß√£o espec√≠fica
  try {
    const { data: verificacaoFinal, error } = await supabaseRequest('usuarios?email=eq.tu@email.com')
    
    if (error) {
      console.log('‚ùå FALHA: Erro na verifica√ß√£o final')
      console.log('   Erro:', error.message)
      console.log('\nüîß POSS√çVEIS CAUSAS:')
      console.log('   1. Usu√°rio n√£o foi salvo no banco')
      console.log('   2. Problema na conex√£o com Supabase')
      console.log('   3. Erro na aplica√ß√£o ao salvar')
    } else if (verificacaoFinal && verificacaoFinal.length > 0) {
      console.log('üéâ SUCESSO! Usu√°rio foi salvo corretamente no Supabase!')
      console.log('‚úÖ Aplica√ß√£o est√° conectada e funcionando')
      console.log('‚úÖ Dados foram persistidos no banco')
      console.log('‚úÖ Sistema de cria√ß√£o de usu√°rios est√° operacional')
      
      const usuario = verificacaoFinal[0]
      console.log('\nüìä COMPARA√á√ÉO:')
      console.log('Aplica√ß√£o disse que criou:', 'Thuany (tu@email.com)')
      console.log('Banco confirma que tem:', `${usuario.nome} (${usuario.email})`)
      console.log('Status:', usuario.id === 'user_1754593410789_3keoqxdt5' ? 'IDs COINCIDEM' : 'IDs DIFERENTES')
    } else {
      console.log('‚ùå PROBLEMA: Usu√°rio N√ÉO foi salvo no banco')
      console.log('\nüîß DIAGN√ìSTICO:')
      console.log('   - A aplica√ß√£o disse que criou o usu√°rio')
      console.log('   - Mas o usu√°rio n√£o est√° no Supabase')
      console.log('   - Pode haver problema na fun√ß√£o de salvar')
    }
    
  } catch (error) {
    console.log('‚ùå Erro na verifica√ß√£o final:', error.message)
  }
}

verificarUsuarioCriado().catch(console.error)
