// Script para testar a conex√£o com sua nova conta Supabase

import { supabase, testarConexaoSupabase } from "../lib/supabase.js"

console.log("üß™ TESTANDO NOVA CONEX√ÉO SUPABASE")
console.log("=".repeat(50))

async function executarTestes() {
  console.log("\n1. üîç Verificando credenciais...")

  const url = process.env.NEXT_PUBLIC_SUPABASE_URL
  const key = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

  if (!url || !key) {
    console.log("‚ùå Credenciais n√£o configuradas!")
    console.log("Configure as vari√°veis de ambiente primeiro.")
    return
  }

  console.log("‚úÖ URL:", url.substring(0, 30) + "...")
  console.log("‚úÖ Key:", key.substring(0, 20) + "...")

  console.log("\n2. üîó Testando conex√£o...")
  const conexaoOk = await testarConexaoSupabase()

  if (!conexaoOk) {
    console.log("‚ùå Falha na conex√£o!")
    console.log("Verifique se:")
    console.log("- As credenciais est√£o corretas")
    console.log("- As tabelas foram criadas")
    console.log("- O projeto Supabase est√° ativo")
    return
  }

  console.log("\n3. üìä Verificando dados...")

  try {
    // Testar usu√°rios
    const { data: usuarios, error: errorUsuarios } = await supabase
      .from("usuarios")
      .select("nome, email, tipo")
      .limit(5)

    if (errorUsuarios) {
      console.log("‚ùå Erro ao buscar usu√°rios:", errorUsuarios.message)
    } else {
      console.log("‚úÖ Usu√°rios encontrados:", usuarios?.length || 0)
      usuarios?.forEach((u) => console.log(`   - ${u.nome} (${u.tipo})`))
    }

    // Testar agendamentos
    const { data: agendamentos, error: errorAgendamentos } = await supabase
      .from("agendamentos")
      .select("assunto, status")
      .limit(3)

    if (errorAgendamentos) {
      console.log("‚ùå Erro ao buscar agendamentos:", errorAgendamentos.message)
    } else {
      console.log("‚úÖ Agendamentos encontrados:", agendamentos?.length || 0)
    }

    // Testar configura√ß√µes
    const { data: configs, error: errorConfigs } = await supabase
      .from("configuracoes_mentores")
      .select("dia_semana, ativo")
      .limit(3)

    if (errorConfigs) {
      console.log("‚ùå Erro ao buscar configura√ß√µes:", errorConfigs.message)
    } else {
      console.log("‚úÖ Configura√ß√µes encontradas:", configs?.length || 0)
    }
  } catch (error) {
    console.log("‚ùå Erro nos testes:", error.message)
  }

  console.log("\nüéâ TESTE CONCLU√çDO!")
  console.log("Se tudo est√° ‚úÖ, sua aplica√ß√£o est√° pronta para usar!")
}

// Executar os testes
executarTestes().catch(console.error)
