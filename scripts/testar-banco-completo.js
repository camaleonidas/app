console.log("üîç TESTANDO ESTRUTURA COMPLETA DO BANCO")
console.log("=".repeat(60))

// Importar fun√ß√µes do Supabase
import {
  buscarAgendamentosMentor,
  reativarAgendamento,
  testarConexaoSupabase,
  sincronizarComLocalStorage,
} from "../lib/supabase-agendamentos.js"

async function testarTudo() {
  try {
    // 1. Testar conex√£o
    console.log("1Ô∏è‚É£ Testando conex√£o com Supabase...")
    const conexao = await testarConexaoSupabase()
    console.log(conexao.success ? "‚úÖ" : "‚ùå", conexao.message)

    if (!conexao.success) {
      console.log("‚ùå N√£o √© poss√≠vel continuar sem conex√£o")
      return
    }

    // 2. Buscar agendamentos do mentor
    console.log("\n2Ô∏è‚É£ Buscando agendamentos do mentor...")
    const mentorId = "ID_DO_MENTOR" // Ser√° substitu√≠do pelo ID real
    const agendamentos = await buscarAgendamentosMentor(mentorId)

    if (agendamentos.success) {
      console.log("‚úÖ Agendamentos encontrados:", agendamentos.data?.length)

      // Mostrar estat√≠sticas
      const stats = {
        total: agendamentos.data?.length || 0,
        pendentes: agendamentos.data?.filter((a) => a.status === "pendente").length || 0,
        confirmados: agendamentos.data?.filter((a) => a.status === "confirmado").length || 0,
        recusados: agendamentos.data?.filter((a) => a.status === "recusado").length || 0,
      }

      console.log("üìä Estat√≠sticas:", stats)

      // 3. Testar reativa√ß√£o se houver agendamentos recusados
      const recusados = agendamentos.data?.filter((a) => a.status === "recusado") || []

      if (recusados.length > 0) {
        console.log("\n3Ô∏è‚É£ Testando reativa√ß√£o...")
        const primeiro = recusados[0]
        console.log("üéØ Reativando agendamento:", primeiro.id)

        const resultado = await reativarAgendamento(primeiro.id, mentorId)

        if (resultado.success) {
          console.log("üéâ SUCESSO! Agendamento reativado:", resultado.message)

          // Verificar se realmente foi reativado
          const verificacao = await buscarAgendamentosMentor(mentorId)
          const agendamentoVerificado = verificacao.data?.find((a) => a.id === primeiro.id)

          console.log("üîç Verifica√ß√£o - Novo status:", agendamentoVerificado?.status)
        } else {
          console.log("‚ùå FALHA na reativa√ß√£o:", resultado.error)
        }
      } else {
        console.log("\n3Ô∏è‚É£ Nenhum agendamento recusado para testar reativa√ß√£o")
      }

      // 4. Sincronizar com localStorage
      console.log("\n4Ô∏è‚É£ Sincronizando com localStorage...")
      await sincronizarComLocalStorage(mentorId)
      console.log("‚úÖ Sincroniza√ß√£o conclu√≠da")
    } else {
      console.log("‚ùå Erro ao buscar agendamentos:", agendamentos.error)
    }
  } catch (error) {
    console.error("üí• Erro cr√≠tico no teste:", error)
  }
}

// Executar teste
testarTudo()

console.log("\n" + "=".repeat(60))
console.log("‚úÖ TESTE COMPLETO FINALIZADO")
